PTHREAD_CONDATTR_GETCLOCK(PPOSIX Programmer's ManuPTHREAD_CONDATTR_GETCLOCK(P)



NAME
       pthread_condattr_getclock,  pthread_condattr_setclock - get and set the
       clock selection condition variable attribute (ADVANCED REALTIME)

SYNOPSIS
       #include <pthread.h>

       int pthread_condattr_getclock(const pthread_condattr_t *restrict attr,
              clockid_t *restrict clock_id);
       int pthread_condattr_setclock(pthread_condattr_t *attr,
              clockid_t clock_id);


DESCRIPTION
       The pthread_condattr_getclock() function shall obtain the value of  the
       clock  attribute  from  the  attributes  object referenced by attr. The
       pthread_condattr_setclock() function shall set the clock  attribute  in
       an  initialized  attributes  object referenced by attr. If pthread_con-
       dattr_setclock() is called with a clock_id argument that  refers  to  a
       CPU-time clock, the call shall fail.

       The  clock attribute is the clock ID of the clock that shall be used to
       measure the timeout service of pthread_cond_timedwait().   The  default
       value of the clock attribute shall refer to the system clock.

RETURN VALUE
       If  successful,  the  pthread_condattr_getclock() function shall return
       zero and store the value of the clock attribute of attr into the object
       referenced  by the clock_id argument.  Otherwise, an error number shall
       be returned to indicate the error.

       If successful, the pthread_condattr_setclock()  function  shall  return
       zero;  otherwise,  an  error  number  shall be returned to indicate the
       error.

ERRORS
       These functions may fail if:

       EINVAL The value specified by attr is invalid.


       The pthread_condattr_setclock() function may fail if:

       EINVAL The value specified by clock_id does not refer to a known clock,
              or is a CPU-time clock.


       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_cond_destroy()   ,   pthread_cond_timedwait()   ,  pthread_con-
       dattr_destroy()   ,   pthread_condattr_getpshared()   ,1   pthread_con-
       dattr_init()  ,  pthread_condattr_setpshared()  ,1  pthread_create()  ,
       pthread_mutex_init()    ,    the    Base    Definitions    volume    of
       IEEE Std 1003.1-2001, <pthread.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
       --  Portable  Operating  System  Interface (POSIX), The Open Group Base
       Specifications Issue 6, Copyright (C) 2001-2003  by  the  Institute  of
       Electrical  and  Electronics  Engineers, Inc and The Open Group. In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .



IEEE/The Open Group                  2003         PTHREAD_CONDATTR_GETCLOCK(P)
