PTHREAD_ATTR_GETSCHEDPARAM(POSIX Programmer's ManPTHREAD_ATTR_GETSCHEDPARAM(P)



NAME
       pthread_attr_getschedparam,  pthread_attr_setschedparam  -  get and set
       the schedparam attribute

SYNOPSIS
       #include <pthread.h>

       int pthread_attr_getschedparam(const pthread_attr_t *restrict attr,
              struct sched_param *restrict param);
       int pthread_attr_setschedparam(pthread_attr_t *restrict attr,
              const struct sched_param *restrict param);


DESCRIPTION
       The  pthread_attr_getschedparam(),   and   pthread_attr_setschedparam()
       functions,  respectively,  shall  get  and set the scheduling parameter
       attributes in the attr argument. The contents of  the  param  structure
       are  defined  in the <sched.h> header.  For the SCHED_FIFO and SCHED_RR
       policies, the only required member of param is sched_priority.

       For the SCHED_SPORADIC policy, the required members of the param struc-
       ture  are  sched_priority, sched_ss_low_priority, sched_ss_repl_period,
       sched_ss_init_budget,    and    sched_ss_max_repl.    The     specified
       sched_ss_repl_period  must  be  greater  than or equal to the specified
       sched_ss_init_budget for the function to succeed; if it  is  not,  then
       the function shall fail. The value of sched_ss_max_repl shall be within
       the inclusive range [1, {SS_REPL_MAX}] for the function to succeed;  if
       not, the function shall fail.

RETURN VALUE
       If      successful,      the      pthread_attr_getschedparam()      and
       pthread_attr_setschedparam() functions shall return zero; otherwise, an
       error number shall be returned to indicate the error.

ERRORS
       The pthread_attr_setschedparam() function may fail if:

       EINVAL The value of param is not valid.

       ENOTSUP
              An  attempt  was  made  to  set  the attribute to an unsupported
              value.


       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       After these attributes have been set, a thread can be created with  the
       specified  attributes using pthread_create(). Using these routines does
       not affect the current running thread.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_attr_destroy() ,  pthread_attr_getscope()  ,  pthread_attr_get-
       inheritsched() , pthread_attr_getschedpolicy() , pthread_create() , the
       Base Definitions volume of IEEE Std 1003.1-2001, <pthread.h>, <sched.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
       --  Portable  Operating  System  Interface (POSIX), The Open Group Base
       Specifications Issue 6, Copyright (C) 2001-2003  by  the  Institute  of
       Electrical  and  Electronics  Engineers, Inc and The Open Group. In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .



IEEE/The Open Group                  2003        PTHREAD_ATTR_GETSCHEDPARAM(P)
