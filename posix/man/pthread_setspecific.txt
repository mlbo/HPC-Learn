PTHREAD_GETSPECIFIC(P)     POSIX Programmer's Manual    PTHREAD_GETSPECIFIC(P)



NAME
       pthread_getspecific, pthread_setspecific - thread-specific data manage-
       ment

SYNOPSIS
       #include <pthread.h>

       void *pthread_getspecific(pthread_key_t key);
       int pthread_setspecific(pthread_key_t key, const void *value);


DESCRIPTION
       The pthread_getspecific() function shall  return  the  value  currently
       bound to the specified key on behalf of the calling thread.

       The  pthread_setspecific()  function  shall associate a thread-specific
       value with a key obtained via a previous call to  pthread_key_create().
       Different threads may bind different values to the same key. These val-
       ues are typically pointers to blocks of  dynamically  allocated  memory
       that have been reserved for use by the calling thread.

       The  effect  of  calling pthread_getspecific() or pthread_setspecific()
       with a key value not obtained from pthread_key_create()  or  after  key
       has been deleted with pthread_key_delete() is undefined.

       Both pthread_getspecific() and pthread_setspecific() may be called from
       a thread-specific data destructor function. A call  to  pthread_getspe-
       cific()  for  the thread-specific data key being destroyed shall return
       the value NULL, unless the  value  is  changed  (after  the  destructor
       starts)  by  a  call  to pthread_setspecific(). Calling pthread_setspe-
       cific() from a  thread-specific  data  destructor  routine  may  result
       either  in  lost  storage (after at least PTHREAD_DESTRUCTOR_ITERATIONS
       attempts at destruction) or in an infinite loop.

       Both functions may be implemented as macros.

RETURN VALUE
       The pthread_getspecific() function  shall  return  the  thread-specific
       data  value  associated  with the given key. If no thread-specific data
       value is associated with key, then the value NULL shall be returned.

       If successful, the pthread_setspecific() function  shall  return  zero;
       otherwise, an error number shall be returned to indicate the error.

ERRORS
       No errors are returned from pthread_getspecific().

       The pthread_setspecific() function shall fail if:

       ENOMEM Insufficient  memory exists to associate the value with the key.


       The pthread_setspecific() function may fail if:

       EINVAL The key value is invalid.


       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       Performance and ease-of-use of pthread_getspecific() are  critical  for
       functions that rely on maintaining state in thread-specific data. Since
       no errors are required to be detected by it, and since the  only  error
       that  could  be  detected is the use of an invalid key, the function to
       pthread_getspecific() has been designed to favor speed  and  simplicity
       over error reporting.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_key_create()    ,    the    Base    Definitions    volume    of
       IEEE Std 1003.1-2001, <pthread.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
       -- Portable Operating System Interface (POSIX),  The  Open  Group  Base
       Specifications  Issue  6,  Copyright  (C) 2001-2003 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open  Group.  In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .



IEEE/The Open Group                  2003               PTHREAD_GETSPECIFIC(P)
