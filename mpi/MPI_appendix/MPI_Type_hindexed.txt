MPI_Type_hindexed(3)                  MPI                 MPI_Type_hindexed(3)



NAME
       MPI_Type_hindexed -  Creates an indexed datatype with offsets in bytes

SYNOPSIS
       #include "mpi.h"
       int MPI_Type_hindexed(
               int count,
               int blocklens[],
               MPI_Aint indices[],
               MPI_Datatype old_type,
               MPI_Datatype *newtype )

INPUT PARAMETERS
       count  -  number  of  blocks  --  also number of entries in indices and
              blocklens
       blocklens
              - number of elements in each block (array of  nonnegative  inte-
              gers)
       indices
              - byte displacement of each block (array of MPI_Aint)
       old_type
              - old datatype (handle)


OUTPUT PARAMETER
       newtype
              - new datatype (handle)


NOTES FOR FORTRAN
       All  MPI routines in Fortran (except for MPI_WTIME and MPI_WTICK ) have
       an additional argument ierr at the end of the argument list.   ierr  is
       an  integer and has the same meaning as the return value of the routine
       in C.  In Fortran, MPI routines are subroutines, and are  invoked  with
       the call statement.

       All MPI objects (e.g., MPI_Datatype , MPI_Comm ) are of type INTEGER in
       Fortran.

       Also see the discussion for MPI_Type_indexed about the indices in  For-
       tran.


ERRORS
       All  MPI  routines  (except  MPI_Wtime  and MPI_Wtick ) return an error
       value; C routines as the value of the function and Fortran routines  in
       the last argument.  Before the value is returned, the current MPI error
       handler is called.  By default, this error handler aborts the MPI  job.
       The  error  handler may be changed with MPI_Errhandler_set ; the prede-
       fined error handler MPI_ERRORS_RETURN may be used to cause error values
       to  be  returned.  Note that MPI does not guarantee that an MPI program
       can continue past an error.

       MPI_SUCCESS
              - No error; MPI routine completed successfully.
       MPI_ERR_TYPE
              - Invalid datatype argument.  May be an uncommitted MPI_Datatype
              (see MPI_Type_commit ).
       MPI_ERR_COUNT
              - Invalid count argument.  Count arguments must be non-negative;
              a count of zero is often valid.
       MPI_ERR_INTERN
              - This error is returned when some part of the MPICH implementa-
              tion is unable to acquire memory.
       MPI_ERR_ARG
              - Invalid argument.  Some argument is invalid and is not identi-
              fied by a specific error class (e.g., MPI_ERR_RANK ).

LOCATION
       type_hind.c



                                   4/7/2003               MPI_Type_hindexed(3)
